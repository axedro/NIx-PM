apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: superset-pvc
  namespace: nix-pm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-config
  namespace: nix-pm
data:
  superset_config.py: |
    import os

    # Talisman configuration for iframe embedding
    TALISMAN_ENABLED = False

    # Disable X-Frame-Options header completely
    HTTP_HEADERS = {}
    X_FRAME_OPTIONS = ""

    # Enable CORS
    ENABLE_CORS = True
    CORS_OPTIONS = {
        "supports_credentials": True,
        "allow_headers": ["*"],
        "resources": ["*"],
        "origins": ["*"]
    }

    # Session configuration
    SESSION_COOKIE_SAMESITE = "None"
    SESSION_COOKIE_SECURE = False
    SESSION_COOKIE_HTTPONLY = False

    # Disable CSRF (development only - enable in production)
    WTF_CSRF_ENABLED = False

    # Database configuration
    SQLALCHEMY_DATABASE_URI = f"postgresql://{os.getenv('DATABASE_USER')}:{os.getenv('DATABASE_PASSWORD')}@{os.getenv('DATABASE_HOST')}:{os.getenv('DATABASE_PORT')}/{os.getenv('DATABASE_DB')}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset
  namespace: nix-pm
  labels:
    app: superset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset
  template:
    metadata:
      labels:
        app: superset
    spec:
      containers:
      - name: superset
        image: apache/superset:latest
        ports:
        - containerPort: 8088
          name: http
        env:
        - name: DATABASE_DIALECT
          value: "postgresql"
        - name: DATABASE_HOST
          value: "postgres-service"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_DB
          value: "superset"
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: SUPERSET_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: nix-pm-secrets
              key: SUPERSET_SECRET_KEY
        volumeMounts:
        - name: superset-config
          mountPath: /app/pythonpath
        - name: superset-storage
          mountPath: /app/superset_home
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        command:
        - sh
        - -c
        - |
          superset db upgrade &&
          superset fab create-admin --username admin --firstname Admin --lastname Admin --email admin@admin.com --password admin || true &&
          superset init &&
          gunicorn --bind 0.0.0.0:8088 --workers 4 --timeout 120 --limit-request-line 0 --limit-request-field_size 0 'superset.app:create_app()'
      volumes:
      - name: superset-config
        configMap:
          name: superset-config
      - name: superset-storage
        persistentVolumeClaim:
          claimName: superset-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: superset-service
  namespace: nix-pm
spec:
  selector:
    app: superset
  ports:
  - port: 8088
    targetPort: 8088
  type: ClusterIP
